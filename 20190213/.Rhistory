library(foreign)
install.packages(foreign)
install.packages("foreign")
install.packages("foreign")
library(foreign) # SPSS 파일 로드
library(dplyr) # 전처리
library(ggplot2) # 시각화
korea <- read.spss("Koweps_hpda12_2017_beta1.sav", to.data.frame = T) # 데이터 파일 불러오기
korea_copy <- korea # 복사본 만들기
korea_copy <- korea_copy %>% rename(gender = h12_g3, birth = h12_g4, birth = h12_g4, marriage = h12_g10, religion = h12_g11, income = h12_pers_income1, code_job = h12_eco9, code_region = h12_reg7)
class(korea_copy$gender)
table(korea_copy$gender)
korea_copy$gender <- ifelse(korea_copy$gender == 1, "male", "female")
table(korea_copy$gender)
qplot(korea_copy$income)
qplot(korea_copy$income) + xlim(0, 10000)
summary(korea_copy$income)
summary(korea_copy$income, na.rm = T)
korea_copy$income <- ifelse(korea_copy$income == 0, NA, korea_copy$income)
qplot(korea_copy$income) + xlim(0, 10000)
qplot(korea_copy$income)
qplot(korea_copy$income) + xlim(0, 10000)
table(korea_copy$gender)
summary(korea_copy$inco)
summary(korea_copy$income)
mean(korea_copy$income)
mean(korea_copy$income[1])
table(korea_copy$gender)
gender_income <- mean(korea_copy$income)
gender_income
gender_income <- mean(korea_copy$income, na.rm = T)
gender_income
gender_income <- korea_copy %>% filter(!is.na(income)) %>% group_by(gender) %>% summarise(mean_income = mean(income))
gender_income
qplot(korea_copy$birth)
qplot(gender_income)
ggplot(gender_income)
ggplot(gender_income, aes(x = gender, y = mean_income)) + geom_bar()
ggplot(gender_income, aes(x = gender, y = mean_income)) + geom_col()
qplot(korea_copy$birth)
summary(korea_copy$birth)
table(is.na(korea_copy$birth))
age_income <- korea_copy %>% filter(!is.na(income)) %>% group_by(birth) %>% summarise(mean_income = mean(income))
age_income
korea_copy <- korea_copy %>% mutate(age = 2017 - korea_copy$birth + 1)
qplot(korea_copy$age)
age_income <- korea_copy %>% filter(!is.na(income)) %>% group_by(age) %>% summarise(mean_income = mean(income))
age_income
ggplot(data = age_income, aes(x = age, y = age_income)) + geom_line()
ggplot(data = age_income, aes(x = age, y = mean_income)) + geom_line()
install.packages("ggiraphExtra")
library(ggiraphExtra)
USArrests
str(USArrests)
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
file.exists("C:/")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
library(tibble)
library(tibble)
library(tibble)
install.packages("tibble")
install.packages("tibble")
li
library(tibble)
crime <- rownames_to_column(USArrests, var = "state")
crime
crime$state <- tolower(crime$state)
library(ggplot2)
states_map <- map_data("state")
library(ggplot2)
states_map <- map_data("state")
install.packages("maps")
states_map <- map_data("state")
library(maps)
states_map <- map_data("state")
ggChoropleth()
library(ggplot2)
install.packages("maps")
install.packages("maps")
ggChoropleth(data = crime, aes(fill = Murder, map_id = state, map = states_map)
library(ggiraphExtra)
library(tibble)
library(ggplot2)
library(maps)
library(ggiraphExtra)
library(tibble)
library(ggplot2)
library(maps)
crime <- rownames_to_column(USArrests, var = "state")
crime$state <- tolower(crime$state)
states_map <- map_data("state")
ggChoropleth(data = crime, aes(fill = Murder, map_id = state, map = states_map)
ggChoropleth(data = crime, aes(fill = Murder, map_id = state), map = states_map)
ggChoropleth(data = crime, aes(fill = Murder, map_id = state), map = states_map)
library(ggiraphExtra)
library(tibble)
library(ggplot2)
library(maps)
ggChoropleth(data = crime, aes(fill = Murder, map_id = state), map = states_map)
install.packages("maps")
install.packages("maps")
ggChoropleth(data = crime, aes(fill = Murder, map_id = state), map = states_map)
install.packages("ggiraphExtra")
install.packages("maps")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
library(ggiraphExtra)
library(tibble)
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
install.packages("tibble")
library(ggiraphExtra)
library(tibble)
library(ggplot2)
library(maps)
