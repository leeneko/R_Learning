list.files()
store <- read.csv("주문 후 배달시간.csv")
store
mean(store$A, na.rm = T)
mean(store$B, na.rm = T)
store$A
store$B
mean(store$a[store$B < 600])
mean(store$B[store$B < 600])
# 중간값(위와 같이 이상치가 있는 경우가 아닌 편차가 심할 경우에 통계를 내는 방법 중 하나)
# 데이터 관찰하기
# 중간값(위와 같이 이상치가 있는 경우가 아닌 편차가 심할 경우에 통계를 내는 방법 중 하나)
median(store$A, na.rm = T)
median(stroe$B, na.rm = T)
median(store$B, na.rm = T)
# 4분위 수
quantile(store$A, na.rm = T)
quantile(store$B, na.rm = T)
# 4분위수 시각화 : boxplot()
# 정규화 > 표준정규분포
vec1 <- c(16,21,22,23,24,25,30)
quantile(vec1)
boxplot(vec1)
# result :
# IQR * 1.5 = (24.5 - 21.5) * 1.5 = 4.5
boxplot(vec1)
library(dplyr)
store <- store %>% filter(B < 600)
store
boxplot(store$A, store$B[store$B<600], na.rm = T, names = c("A식당", "B식당"))
median(store$B, na.rm = T)
median(store$C, na.rm = T)
boxplot(store$B, store$C, na.rm = T, names = c("B식당", "C식당"))
hist(store$B)
hist(store$C)
hist(store$B, store$C)
hist(store$B)
hist(store$C)
par(mfrow = c(1,2))
hist(store$B)
hist(store$C)
# 분산과 표준편차
# 분산과 표준편차
# 분산이란 평균값으로부터 떨어져 있는 정도를 나타내는 지표
var(store$B)
var(store$C)
sd(store$B)
sd(store$C)
blood <- read.csv
blood <- read.csv("호남대혈액")
blood <- read.csv("호남대혈액형.csv")
table(blood$blood)
pie(table(blood$blood))
pie(table(blood$blood), label = paste0())
pie(table(blood$blood), label = paste0(names(table(blood$blood)), "형"))
pie(table(blood$blood), label = paste0(names(table(blood$blood)), "형"), main = "우리반 혈액형")
library(RColorBrewer)
library(RColorBrewer)
pal1 <- brewer.pal(4, "Dark2")
pie(table(blood$blood), label = paste0(names(table(blood$blood)), "형"), main = "우리반 혈액형", col = rev(pal1))
pie(table(blood$blood), label = paste0(names(table(blood$blood)), "형"), main = "우리반 혈액형", col = rev(pal1), init.angle = 90)
list.files()
blood2 <- read.csv("혈액형현황.csv")
table(blood2)
blood2Class <- table(blood2$class)
blood2Blood <- table(blood2$blood)
blood2Gender <- table(blood2$gender)
par(mfrow = c(1,3))
pie(table(blood2Class))
pie(table(blood2Blood))
pie(table(blood2Gender))
par(mfrow = c(1,3))
pie(table(blood2Class), main = "반별 학생현황")
pie(table(blood2Blood), main = "혈액형별 현황")
pie(table(blood2Gender), main = "성별 현황")
par(mfrow = c(1,3))
pie(table(blood2Class), main = "반별 학생현황")
pie(table(blood2Blood), label = paste0(names(table(blood$blood)), "형"), main = "혈액형별 현황")
pie(table(blood2Gender), main = "성별 현황")
par(mfow = c(1,3))
pie(table(blood$class), labels = paste0(names(table(blood$class)), "반"), main = "반별 학생현황", col = rev(pal), init.angle = 90)
pie(table(blood$blood), labels = paste0(names(table(blood$blood)), "형"), main = "혈액형별 현황", col = rev(pal2), init.angle = 90)
pie(table(blood$gender), labels = names(table(blood$gender)), main = "성별 현황", col = rev(pal3), init.angle = 90)
par(mrow = c(1,3))
par(mfrow = c(1,3))
pie(table(blood$class), labels = paste0(names(table(blood$class)), "반"), main = "반별 학생현황", col = rev(pal), init.angle = 90)
brewer.pal()
brewer.pal.info
pal <- brewer.pal("Set1")
pie(table(blood$class), labels = paste0(names(table(blood$class)), "반"), main = "반별 학생현황", init.angle = 90)
pie(table(blood$blood), labels = paste0(names(table(blood$blood)), "형"), main = "혈액형별 현황", init.angle = 90)
pie(table(blood$gender), labels = names(table(blood$gender)), main = "성별 현황", init.angle = 90)
par(mfrow = c(1,3))
pie(table(blood$class), labels = paste0(names(table(blood$class)), "반"), main = "반별 학생현황", init.angle = 90)
pie(table(blood$blood), labels = paste0(names(table(blood$blood)), "형"), main = "혈액형별 현황", init.angle = 90)
pie(table(blood$gender), labels = names(table(blood$gender)), main = "성별 현황", init.angle = 90)
par(mfrow = c(1,3))
pie(table(blood$class), labels = paste0(names(table(blood$class)), "반"), main = "반별 학생현황", init.angle = 90)
pie(table(blood$class), labels = paste0(names(table(blood$class)), "반"), main = "반별 학생현황", init.angle = 90)
par(mfrow = c(1,3))
pie(table(blood2$class), labels = paste0(names(table(blood2$class)), "반"), main = "반별 학생현황", init.angle = 90)
pie(table(blood2$blood), labels = paste0(names(table(blood2$blood)), "형"), main = "혈액형별 현황", init.angle = 90)
pie(table(blood2$gender), labels = names(table(blood2$gender)), main = "성별 현황", init.angle = 90)
barplot(t(table(blood %>% select(blood, gender))), col = c("#8DD3C7", "#FFFFB3"), legend = T, beside = T)
library(dplyr)
barplot(t(table(blood %>% select(blood, gender))), col = c("#8DD3C7", "#FFFFB3"), legend = T, beside = T)
barplot(t(table(blood2 %>% select(blood2, gender))), col = c("#8DD3C7", "#FFFFB3"), legend = T, beside = T)
barplot(t(table(blood2 %>% select(blood, gender))), col = c("#8DD3C7", "#FFFFB3"), legend = T, beside = T)
list.files()
korean <- read.csv("학생별국어성적_new.csv")
library(dplyr)
library(ggplot2)
ggplot(korean, aes(x = 이름, y = 점수)) + geom_point()
ggplot(data = mpg, aes(ㅌ = displ, y = hwy)) + geom_point()
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
+ xlim(3,6)
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() # 배기량, 고속도로 연비
+ xlim(3,6)
# 배기량, 고속도로 연비
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + xlim(3,6)
# 배기량, 고속도로 연비
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point() + xlim(3,6) + ylim(15, 30)
# 배기량, 고속도로 연비
ggplot(data = mpg, aes(x = displ, y = hwy)) + geom_point()
ggplot(data = mpg, aes(x = cty, y = hwy)) + geom_point()
ggplot(data = midwest, aes(x = poptotal, y = popasian)) + geom_point() + xlim(0, 500000) + ylim(0, 10000)
